{"ast":null,"code":"/**\n * Applies a bitwise NOT to the contents of a buffer. Returns a new buffer.\n *\n * @example\n * bitwise.buffer.not(buffer) => Buffer(NOT buffer)\n *\n * @param {Buffer} buffer input data\n * @return {Buffer} Buffer(NOT buffer)\n */\nexport default (function (buffer) {\n  var result = Buffer.alloc(buffer.length);\n\n  for (var i = 0; i < buffer.length; i++) result[i] = ~buffer[i];\n\n  return result;\n});","map":{"version":3,"sources":["/Users/leondo/Desktop/metamask-auth/node_modules/bitwise/esm/buffer/not.js"],"names":["buffer","result","Buffer","alloc","length","i"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAUA,MAAV,EAAkB;AAC9B,MAAIC,MAAM,GAAGC,MAAM,CAACC,KAAP,CAAaH,MAAM,CAACI,MAApB,CAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,MAAM,CAACI,MAA3B,EAAmCC,CAAC,EAApC,EACIJ,MAAM,CAACI,CAAD,CAAN,GAAY,CAACL,MAAM,CAACK,CAAD,CAAnB;;AACJ,SAAOJ,MAAP;AACH,CALD","sourcesContent":["/**\n * Applies a bitwise NOT to the contents of a buffer. Returns a new buffer.\n *\n * @example\n * bitwise.buffer.not(buffer) => Buffer(NOT buffer)\n *\n * @param {Buffer} buffer input data\n * @return {Buffer} Buffer(NOT buffer)\n */\nexport default (function (buffer) {\n    var result = Buffer.alloc(buffer.length);\n    for (var i = 0; i < buffer.length; i++)\n        result[i] = ~buffer[i];\n    return result;\n});\n"]},"metadata":{},"sourceType":"module"}