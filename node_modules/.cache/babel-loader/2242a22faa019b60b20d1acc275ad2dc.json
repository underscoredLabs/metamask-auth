{"ast":null,"code":"/**\n * Applies a bitwise XNOR to the contents of two buffers. Returns a new buffer.\n *\n * @example\n * bitwise.buffer.xnor(a, b, false) => Buffer(a XNOR b)\n *\n * @param {Buffer} a first buffer\n * @param {Buffer} b second buffer\n * @param {Boolean} isLooping loop through first buffer\n * @return {Buffer} a XNOR b\n */\nexport default (function (a, b, isLooping) {\n  if (isLooping === void 0) {\n    isLooping = false;\n  }\n\n  var length = isLooping ? b.length : a.length;\n  var result = Buffer.alloc(length);\n\n  for (var i = 0; i < length; i++) {\n    var j = isLooping ? i % a.length : i;\n    result[i] = ~(a[j] ^ b[i]);\n  }\n\n  return result;\n});","map":{"version":3,"sources":["/Users/leondo/Desktop/metamask-auth/node_modules/bitwise/esm/buffer/xnor.js"],"names":["a","b","isLooping","length","result","Buffer","alloc","i","j"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAUA,CAAV,EAAaC,CAAb,EAAgBC,SAAhB,EAA2B;AACvC,MAAIA,SAAS,KAAK,KAAK,CAAvB,EAA0B;AAAEA,IAAAA,SAAS,GAAG,KAAZ;AAAoB;;AAChD,MAAIC,MAAM,GAAGD,SAAS,GAAGD,CAAC,CAACE,MAAL,GAAcH,CAAC,CAACG,MAAtC;AACA,MAAIC,MAAM,GAAGC,MAAM,CAACC,KAAP,CAAaH,MAAb,CAAb;;AACA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAApB,EAA4BI,CAAC,EAA7B,EAAiC;AAC7B,QAAIC,CAAC,GAAGN,SAAS,GAAGK,CAAC,GAAGP,CAAC,CAACG,MAAT,GAAkBI,CAAnC;AACAH,IAAAA,MAAM,CAACG,CAAD,CAAN,GAAY,EAAEP,CAAC,CAACQ,CAAD,CAAD,GAAOP,CAAC,CAACM,CAAD,CAAV,CAAZ;AACH;;AACD,SAAOH,MAAP;AACH,CATD","sourcesContent":["/**\n * Applies a bitwise XNOR to the contents of two buffers. Returns a new buffer.\n *\n * @example\n * bitwise.buffer.xnor(a, b, false) => Buffer(a XNOR b)\n *\n * @param {Buffer} a first buffer\n * @param {Buffer} b second buffer\n * @param {Boolean} isLooping loop through first buffer\n * @return {Buffer} a XNOR b\n */\nexport default (function (a, b, isLooping) {\n    if (isLooping === void 0) { isLooping = false; }\n    var length = isLooping ? b.length : a.length;\n    var result = Buffer.alloc(length);\n    for (var i = 0; i < length; i++) {\n        var j = isLooping ? i % a.length : i;\n        result[i] = ~(a[j] ^ b[i]);\n    }\n    return result;\n});\n"]},"metadata":{},"sourceType":"module"}