{"ast":null,"code":"import { g as get_store_value, a as app } from './onboard-6d718fff.js';\nimport 'bignumber.js';\nimport 'bnc-sdk';\nimport 'bowser';\nimport Web3ProviderEngine from 'web3-provider-engine';\nimport RpcSource from 'web3-provider-engine/subproviders/rpc';\nimport HookedWalletSubprovider from 'web3-provider-engine/subproviders/hooked-wallet';\nimport SubscriptionSubprovider from 'web3-provider-engine/subproviders/subscriptions';\nimport FilterSubprovider from 'web3-provider-engine/subproviders/filters';\n\nfunction createProvider(config) {\n  var getAccounts = config.getAccounts,\n      signTransaction = config.signTransaction,\n      rpcUrl = config.rpcUrl,\n      processMessage = config.processMessage,\n      processPersonalMessage = config.processPersonalMessage,\n      signMessage = config.signMessage,\n      signPersonalMessage = config.signPersonalMessage;\n  var pollingInterval = get_store_value(app).blockPollingInterval;\n  var idMgmt = getAccounts && new HookedWalletSubprovider({\n    getAccounts: getAccounts,\n    signTransaction: signTransaction,\n    processMessage: processMessage,\n    processPersonalMessage: processPersonalMessage,\n    signMessage: signMessage,\n    signPersonalMessage: signPersonalMessage\n  });\n  var rpcSubProvider = new RpcSource({\n    rpcUrl: rpcUrl.includes('http') ? rpcUrl : \"https://\".concat(rpcUrl)\n  });\n  var provider = new Web3ProviderEngine({\n    pollingInterval: pollingInterval\n  });\n  provider.addProvider(new SubscriptionSubprovider());\n  provider.addProvider(new FilterSubprovider());\n  idMgmt && provider.addProvider(idMgmt);\n  provider.addProvider(rpcSubProvider);\n  provider.start();\n  provider.on('error', console.error);\n  return provider;\n}\n\nexport default createProvider;","map":{"version":3,"sources":["/Users/leondo/Desktop/metamask-auth/node_modules/bnc-onboard/dist/esm/providerEngine-144da692.js"],"names":["g","get_store_value","a","app","Web3ProviderEngine","RpcSource","HookedWalletSubprovider","SubscriptionSubprovider","FilterSubprovider","createProvider","config","getAccounts","signTransaction","rpcUrl","processMessage","processPersonalMessage","signMessage","signPersonalMessage","pollingInterval","blockPollingInterval","idMgmt","rpcSubProvider","includes","concat","provider","addProvider","start","on","console","error"],"mappings":"AACA,SAASA,CAAC,IAAIC,eAAd,EAA+BC,CAAC,IAAIC,GAApC,QAA+C,uBAA/C;AACA,OAAO,cAAP;AACA,OAAO,SAAP;AACA,OAAO,QAAP;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAOC,uBAAP,MAAoC,iDAApC;AACA,OAAOC,uBAAP,MAAoC,iDAApC;AACA,OAAOC,iBAAP,MAA8B,2CAA9B;;AAEA,SAASC,cAAT,CAAwBC,MAAxB,EAAgC;AAC9B,MAAIC,WAAW,GAAGD,MAAM,CAACC,WAAzB;AAAA,MACIC,eAAe,GAAGF,MAAM,CAACE,eAD7B;AAAA,MAEIC,MAAM,GAAGH,MAAM,CAACG,MAFpB;AAAA,MAGIC,cAAc,GAAGJ,MAAM,CAACI,cAH5B;AAAA,MAIIC,sBAAsB,GAAGL,MAAM,CAACK,sBAJpC;AAAA,MAKIC,WAAW,GAAGN,MAAM,CAACM,WALzB;AAAA,MAMIC,mBAAmB,GAAGP,MAAM,CAACO,mBANjC;AAOA,MAAIC,eAAe,GAAGjB,eAAe,CAACE,GAAD,CAAf,CAAqBgB,oBAA3C;AACA,MAAIC,MAAM,GAAGT,WAAW,IAAI,IAAIL,uBAAJ,CAA4B;AACtDK,IAAAA,WAAW,EAAEA,WADyC;AAEtDC,IAAAA,eAAe,EAAEA,eAFqC;AAGtDE,IAAAA,cAAc,EAAEA,cAHsC;AAItDC,IAAAA,sBAAsB,EAAEA,sBAJ8B;AAKtDC,IAAAA,WAAW,EAAEA,WALyC;AAMtDC,IAAAA,mBAAmB,EAAEA;AANiC,GAA5B,CAA5B;AAQA,MAAII,cAAc,GAAG,IAAIhB,SAAJ,CAAc;AACjCQ,IAAAA,MAAM,EAAEA,MAAM,CAACS,QAAP,CAAgB,MAAhB,IAA0BT,MAA1B,GAAmC,WAAWU,MAAX,CAAkBV,MAAlB;AADV,GAAd,CAArB;AAGA,MAAIW,QAAQ,GAAG,IAAIpB,kBAAJ,CAAuB;AACpCc,IAAAA,eAAe,EAAEA;AADmB,GAAvB,CAAf;AAGAM,EAAAA,QAAQ,CAACC,WAAT,CAAqB,IAAIlB,uBAAJ,EAArB;AACAiB,EAAAA,QAAQ,CAACC,WAAT,CAAqB,IAAIjB,iBAAJ,EAArB;AACAY,EAAAA,MAAM,IAAII,QAAQ,CAACC,WAAT,CAAqBL,MAArB,CAAV;AACAI,EAAAA,QAAQ,CAACC,WAAT,CAAqBJ,cAArB;AACAG,EAAAA,QAAQ,CAACE,KAAT;AACAF,EAAAA,QAAQ,CAACG,EAAT,CAAY,OAAZ,EAAqBC,OAAO,CAACC,KAA7B;AACA,SAAOL,QAAP;AACD;;AAED,eAAef,cAAf","sourcesContent":["import 'regenerator-runtime/runtime';\nimport { g as get_store_value, a as app } from './onboard-6d718fff.js';\nimport 'bignumber.js';\nimport 'bnc-sdk';\nimport 'bowser';\nimport Web3ProviderEngine from 'web3-provider-engine';\nimport RpcSource from 'web3-provider-engine/subproviders/rpc';\nimport HookedWalletSubprovider from 'web3-provider-engine/subproviders/hooked-wallet';\nimport SubscriptionSubprovider from 'web3-provider-engine/subproviders/subscriptions';\nimport FilterSubprovider from 'web3-provider-engine/subproviders/filters';\n\nfunction createProvider(config) {\n  var getAccounts = config.getAccounts,\n      signTransaction = config.signTransaction,\n      rpcUrl = config.rpcUrl,\n      processMessage = config.processMessage,\n      processPersonalMessage = config.processPersonalMessage,\n      signMessage = config.signMessage,\n      signPersonalMessage = config.signPersonalMessage;\n  var pollingInterval = get_store_value(app).blockPollingInterval;\n  var idMgmt = getAccounts && new HookedWalletSubprovider({\n    getAccounts: getAccounts,\n    signTransaction: signTransaction,\n    processMessage: processMessage,\n    processPersonalMessage: processPersonalMessage,\n    signMessage: signMessage,\n    signPersonalMessage: signPersonalMessage\n  });\n  var rpcSubProvider = new RpcSource({\n    rpcUrl: rpcUrl.includes('http') ? rpcUrl : \"https://\".concat(rpcUrl)\n  });\n  var provider = new Web3ProviderEngine({\n    pollingInterval: pollingInterval\n  });\n  provider.addProvider(new SubscriptionSubprovider());\n  provider.addProvider(new FilterSubprovider());\n  idMgmt && provider.addProvider(idMgmt);\n  provider.addProvider(rpcSubProvider);\n  provider.start();\n  provider.on('error', console.error);\n  return provider;\n}\n\nexport default createProvider;"]},"metadata":{},"sourceType":"module"}