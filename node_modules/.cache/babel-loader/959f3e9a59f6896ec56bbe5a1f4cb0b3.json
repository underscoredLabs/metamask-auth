{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.errorMessage = exports.parseMessage = void 0; // parse MessageEvent .data into CoreMessage\n\nvar parseMessage = function parseMessage(messageData) {\n  var message = {\n    event: messageData.event,\n    type: messageData.type,\n    payload: messageData.payload\n  };\n\n  if (typeof messageData.id === 'number') {\n    message.id = messageData.id;\n  }\n\n  if (typeof messageData.success === 'boolean') {\n    message.success = messageData.success;\n  }\n\n  return message;\n}; // common response used straight from npm index (not from Core)\n\n\nexports.parseMessage = parseMessage;\n\nvar errorMessage = function errorMessage(error) {\n  return {\n    success: false,\n    payload: {\n      error: error.message,\n      code: error.code\n    }\n  };\n};\n\nexports.errorMessage = errorMessage;","map":{"version":3,"sources":["/Users/leondo/Desktop/metamask-auth/node_modules/trezor-connect/lib/message/index.js"],"names":["exports","__esModule","errorMessage","parseMessage","messageData","message","event","type","payload","id","success","error","code"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,YAAR,GAAuBF,OAAO,CAACG,YAAR,GAAuB,KAAK,CAAnD,C,CAEA;;AACA,IAAIA,YAAY,GAAG,SAASA,YAAT,CAAsBC,WAAtB,EAAmC;AACpD,MAAIC,OAAO,GAAG;AACZC,IAAAA,KAAK,EAAEF,WAAW,CAACE,KADP;AAEZC,IAAAA,IAAI,EAAEH,WAAW,CAACG,IAFN;AAGZC,IAAAA,OAAO,EAAEJ,WAAW,CAACI;AAHT,GAAd;;AAMA,MAAI,OAAOJ,WAAW,CAACK,EAAnB,KAA0B,QAA9B,EAAwC;AACtCJ,IAAAA,OAAO,CAACI,EAAR,GAAaL,WAAW,CAACK,EAAzB;AACD;;AAED,MAAI,OAAOL,WAAW,CAACM,OAAnB,KAA+B,SAAnC,EAA8C;AAC5CL,IAAAA,OAAO,CAACK,OAAR,GAAkBN,WAAW,CAACM,OAA9B;AACD;;AAED,SAAOL,OAAP;AACD,CAhBD,C,CAgBG;;;AAGHL,OAAO,CAACG,YAAR,GAAuBA,YAAvB;;AAEA,IAAID,YAAY,GAAG,SAASA,YAAT,CAAsBS,KAAtB,EAA6B;AAC9C,SAAO;AACLD,IAAAA,OAAO,EAAE,KADJ;AAELF,IAAAA,OAAO,EAAE;AACPG,MAAAA,KAAK,EAAEA,KAAK,CAACN,OADN;AAEPO,MAAAA,IAAI,EAAED,KAAK,CAACC;AAFL;AAFJ,GAAP;AAOD,CARD;;AAUAZ,OAAO,CAACE,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.errorMessage = exports.parseMessage = void 0;\n\n// parse MessageEvent .data into CoreMessage\nvar parseMessage = function parseMessage(messageData) {\n  var message = {\n    event: messageData.event,\n    type: messageData.type,\n    payload: messageData.payload\n  };\n\n  if (typeof messageData.id === 'number') {\n    message.id = messageData.id;\n  }\n\n  if (typeof messageData.success === 'boolean') {\n    message.success = messageData.success;\n  }\n\n  return message;\n}; // common response used straight from npm index (not from Core)\n\n\nexports.parseMessage = parseMessage;\n\nvar errorMessage = function errorMessage(error) {\n  return {\n    success: false,\n    payload: {\n      error: error.message,\n      code: error.code\n    }\n  };\n};\n\nexports.errorMessage = errorMessage;"]},"metadata":{},"sourceType":"script"}