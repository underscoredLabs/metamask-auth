{"ast":null,"code":"var _jsxFileName = \"/Users/leondo/Desktop/metamask-auth/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport Onboard from \"bnc-onboard\";\nimport Web3 from \"web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet web3;\nconst onboard = Onboard({\n  dappId: \"abfa7356-64c3-4047-a6e1-cdb39a0c691e\",\n  // [String] The API key created by step one above\n  networkId: 1,\n  // [Integer] The Ethereum network ID your Dapp uses.\n  subscriptions: {\n    wallet: wallet => {\n      web3 = new Web3(wallet.provider);\n      console.log(`${wallet.name} is now connected`);\n    }\n  },\n  walletSelect: {\n    wallets: [{\n      walletName: \"metamask\",\n      preferred: true,\n      label: \"MetaMask - Browser\"\n    }, {\n      walletName: \"walletConnect\",\n      infuraKey: \"6429a308b4d646399b1ea170bb406c61\",\n      preferred: true,\n      label: \"WalletConnect - Mobile\"\n    }, {\n      walletName: \"torus\",\n      preferred: true,\n      label: \"Torus - Social\"\n    }]\n  }\n});\n\nfunction App() {\n  _s();\n\n  const [signedMessage, setSignedMessage] = useState(null);\n\n  const login = async () => {\n    try {\n      await onboard.walletSelect();\n      await onboard.walletCheck();\n      setSignedMessage(await signMessage());\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const signMessage = async () => {\n    const from = (await web3.eth.getAccounts())[0];\n    const expiration = Math.round(Date.now() / 1000 + 300).toString();\n    const message = `${from}-${expiration}`;\n    const signature = await web3.eth.personal.sign(message, from);\n    return `Code ${signature}-${message}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"code\", {\n        className: \"App-signature\",\n        children: signedMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"App-button\",\n        onClick: login,\n        children: \"Select a Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        className: \"App-video\",\n        src: \"https://youtu.be/OngHbKxGmDQ\",\n        frameborder: \"0\",\n        allow: \"autoplay; encrypted-media\",\n        allowfullscreen: true,\n        title: \"video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Ce85KU+/BzuyTzmkmxStiFa+OOA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/leondo/Desktop/metamask-auth/src/App.js"],"names":["useState","Onboard","Web3","web3","onboard","dappId","networkId","subscriptions","wallet","provider","console","log","name","walletSelect","wallets","walletName","preferred","label","infuraKey","App","signedMessage","setSignedMessage","login","walletCheck","signMessage","error","from","eth","getAccounts","expiration","Math","round","Date","now","toString","message","signature","personal","sign"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport Onboard from \"bnc-onboard\";\nimport Web3 from \"web3\";\n\nlet web3;\n\nconst onboard = Onboard({\n  dappId: \"abfa7356-64c3-4047-a6e1-cdb39a0c691e\", // [String] The API key created by step one above\n  networkId: 1, // [Integer] The Ethereum network ID your Dapp uses.\n  subscriptions: {\n    wallet: (wallet) => {\n      web3 = new Web3(wallet.provider);\n      console.log(`${wallet.name} is now connected`);\n    },\n  },\n  walletSelect: {\n    wallets: [\n      { walletName: \"metamask\", preferred: true, label: \"MetaMask - Browser\" },\n      {\n        walletName: \"walletConnect\",\n        infuraKey: \"6429a308b4d646399b1ea170bb406c61\",\n        preferred: true,\n        label: \"WalletConnect - Mobile\",\n      },\n      { walletName: \"torus\", preferred: true, label: \"Torus - Social\" },\n    ],\n  },\n});\n\nfunction App() {\n  const [signedMessage, setSignedMessage] = useState(null);\n\n  const login = async () => {\n    try {\n      await onboard.walletSelect();\n      await onboard.walletCheck();\n      setSignedMessage(await signMessage());\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const signMessage = async () => {\n    const from = (await web3.eth.getAccounts())[0];\n    const expiration = Math.round(Date.now() / 1000 + 300).toString();\n    const message = `${from}-${expiration}`;\n    const signature = await web3.eth.personal.sign(message, from);\n    return `Code ${signature}-${message}`;\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <code className=\"App-signature\">{signedMessage}</code>\n        <span className=\"App-button\" onClick={login}>\n          Select a Wallet\n        </span>\n        <iframe className=\"App-video\" src=\"https://youtu.be/OngHbKxGmDQ\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen title=\"video\" />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}