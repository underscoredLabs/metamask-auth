{"ast":null,"code":"import _regeneratorRuntime from \"/Users/leondo/Desktop/metamask-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nimport { n as networkName } from './onboard-6d718fff.js';\nimport 'bignumber.js';\nimport 'bnc-sdk';\nimport 'bowser';\nvar fortmaticIcon = \"\\n  <svg \\n    height=\\\"40\\\" \\n    viewBox=\\\"0 0 40 40\\\" \\n    width=\\\"40\\\" \\n    xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n  >\\n    <path d=\\\"m2744.99995 1155h9.99997 10.00008v9.98139h-10.00008-9.99997-9.99998v9.9814.64001 9.28323.05815 9.9234h-9.99997v-9.9234-.05815-9.28323-.64001-9.9814-9.98139h9.99997zm9.99961 29.88552h-9.94167v-9.92324h19.93595v10.27235c0 2.55359-1.01622 5.00299-2.82437 6.80909-1.80867 1.8061-4.26182 2.82181-6.82018 2.82335h-.34973z\\\" \\n      fill=\\\"#617bff\\\" \\n      fill-rule=\\\"evenodd\\\" \\n      transform=\\\"translate(-2725 -1155)\\\"/>\\n  </svg>\\n\";\n\nfunction fortmatic(options) {\n  var apiKey = options.apiKey,\n      networkId = options.networkId,\n      preferred = options.preferred,\n      label = options.label,\n      iconSrc = options.iconSrc,\n      svg = options.svg;\n  return {\n    name: label || 'Fortmatic',\n    svg: svg || fortmaticIcon,\n    iconSrc: iconSrc,\n    wallet: function () {\n      var _wallet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(helpers) {\n        var _yield$import, Fortmatic, instance, provider, BigNumber, getAddress, enabled;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return import('fortmatic');\n\n              case 2:\n                _yield$import = _context2.sent;\n                Fortmatic = _yield$import[\"default\"];\n                instance = new Fortmatic(apiKey, networkId === 1 ? undefined : networkName(networkId));\n                provider = instance.getProvider();\n                BigNumber = helpers.BigNumber, getAddress = helpers.getAddress;\n                return _context2.abrupt(\"return\", {\n                  provider: provider,\n                  instance: instance,\n                  \"interface\": {\n                    name: 'Fortmatic',\n                    connect: function connect() {\n                      return instance.user.login().then(function (res) {\n                        enabled = true;\n                        return res;\n                      });\n                    },\n                    disconnect: function disconnect() {\n                      return instance.user.logout();\n                    },\n                    address: {\n                      get: function get() {\n                        return enabled ? getAddress(provider) : Promise.resolve();\n                      }\n                    },\n                    network: {\n                      get: function get() {\n                        return Promise.resolve(networkId);\n                      }\n                    },\n                    balance: {\n                      get: function () {\n                        var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                          return _regeneratorRuntime.wrap(function _callee$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  return _context.abrupt(\"return\", enabled && instance.user.getBalances().then(function (res) {\n                                    return res[0] ? BigNumber(res[0].crypto_amount).times(BigNumber('1000000000000000000')).toString(10) : null;\n                                  }));\n\n                                case 1:\n                                case \"end\":\n                                  return _context.stop();\n                              }\n                            }\n                          }, _callee);\n                        }));\n\n                        function get() {\n                          return _get.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    },\n                    dashboard: function dashboard() {\n                      return instance.user.settings();\n                    }\n                  }\n                });\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function wallet(_x) {\n        return _wallet.apply(this, arguments);\n      }\n\n      return wallet;\n    }(),\n    type: 'sdk',\n    desktop: true,\n    mobile: true,\n    preferred: preferred\n  };\n}\n\nexport default fortmatic;","map":{"version":3,"sources":["/Users/leondo/Desktop/metamask-auth/node_modules/bnc-onboard/dist/esm/fortmatic-098b76f9.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","n","networkName","fortmaticIcon","fortmatic","options","apiKey","networkId","preferred","label","iconSrc","svg","name","wallet","_wallet","mark","_callee2","helpers","_yield$import","Fortmatic","instance","provider","BigNumber","getAddress","enabled","wrap","_callee2$","_context2","prev","next","sent","getProvider","abrupt","connect","user","login","res","disconnect","logout","address","get","network","balance","_get","_callee","_callee$","_context","getBalances","crypto_amount","times","toString","stop","dashboard","settings","_x","type","desktop","mobile"],"mappings":"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","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport 'regenerator-runtime/runtime';\nimport { n as networkName } from './onboard-6d718fff.js';\nimport 'bignumber.js';\nimport 'bnc-sdk';\nimport 'bowser';\nvar fortmaticIcon = \"\\n  <svg \\n    height=\\\"40\\\" \\n    viewBox=\\\"0 0 40 40\\\" \\n    width=\\\"40\\\" \\n    xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n  >\\n    <path d=\\\"m2744.99995 1155h9.99997 10.00008v9.98139h-10.00008-9.99997-9.99998v9.9814.64001 9.28323.05815 9.9234h-9.99997v-9.9234-.05815-9.28323-.64001-9.9814-9.98139h9.99997zm9.99961 29.88552h-9.94167v-9.92324h19.93595v10.27235c0 2.55359-1.01622 5.00299-2.82437 6.80909-1.80867 1.8061-4.26182 2.82181-6.82018 2.82335h-.34973z\\\" \\n      fill=\\\"#617bff\\\" \\n      fill-rule=\\\"evenodd\\\" \\n      transform=\\\"translate(-2725 -1155)\\\"/>\\n  </svg>\\n\";\n\nfunction fortmatic(options) {\n  var apiKey = options.apiKey,\n      networkId = options.networkId,\n      preferred = options.preferred,\n      label = options.label,\n      iconSrc = options.iconSrc,\n      svg = options.svg;\n  return {\n    name: label || 'Fortmatic',\n    svg: svg || fortmaticIcon,\n    iconSrc: iconSrc,\n    wallet: function () {\n      var _wallet = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(helpers) {\n        var _yield$import, Fortmatic, instance, provider, BigNumber, getAddress, enabled;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return import('fortmatic');\n\n              case 2:\n                _yield$import = _context2.sent;\n                Fortmatic = _yield$import[\"default\"];\n                instance = new Fortmatic(apiKey, networkId === 1 ? undefined : networkName(networkId));\n                provider = instance.getProvider();\n                BigNumber = helpers.BigNumber, getAddress = helpers.getAddress;\n                return _context2.abrupt(\"return\", {\n                  provider: provider,\n                  instance: instance,\n                  \"interface\": {\n                    name: 'Fortmatic',\n                    connect: function connect() {\n                      return instance.user.login().then(function (res) {\n                        enabled = true;\n                        return res;\n                      });\n                    },\n                    disconnect: function disconnect() {\n                      return instance.user.logout();\n                    },\n                    address: {\n                      get: function get() {\n                        return enabled ? getAddress(provider) : Promise.resolve();\n                      }\n                    },\n                    network: {\n                      get: function get() {\n                        return Promise.resolve(networkId);\n                      }\n                    },\n                    balance: {\n                      get: function () {\n                        var _get = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                          return regeneratorRuntime.wrap(function _callee$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  return _context.abrupt(\"return\", enabled && instance.user.getBalances().then(function (res) {\n                                    return res[0] ? BigNumber(res[0].crypto_amount).times(BigNumber('1000000000000000000')).toString(10) : null;\n                                  }));\n\n                                case 1:\n                                case \"end\":\n                                  return _context.stop();\n                              }\n                            }\n                          }, _callee);\n                        }));\n\n                        function get() {\n                          return _get.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    },\n                    dashboard: function dashboard() {\n                      return instance.user.settings();\n                    }\n                  }\n                });\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function wallet(_x) {\n        return _wallet.apply(this, arguments);\n      }\n\n      return wallet;\n    }(),\n    type: 'sdk',\n    desktop: true,\n    mobile: true,\n    preferred: preferred\n  };\n}\n\nexport default fortmatic;"]},"metadata":{},"sourceType":"module"}